

C:\> msiexec.exe /i https://awscli.amazonaws.com/AWSCLIV2.msi

tf-user07
T{BB[fP[FU}bJdC


C:\Users\Administrator>aws configure
AWS Access Key ID [None]: AKIAYIMEDZZZDKCH34US
AWS Secret Access Key [None]: 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
Default region name [None]:
Default output format [None]:

C:\Users\Administrator>


https://github.com/zealvora/terraform-beginner-to-advanced-resource/blob/master/Section%202%20-%20Read%2C%20Generate%2C%20Modify%20Congiruations/data-types.md


useast1
ami-0c02fb55956c7d316

 567749627506

provider "aws" {
  region     = "usap-south-1"
}

resource "aws_elb" "venkat-bar" {
  name               = var.elb_name
  availability_zones = var.az

  listener {
    instance_port     = 8000
    instance_protocol = "http"
    lb_port           = 80
    lb_protocol       = "http"
  }

  health_check {
    healthy_threshold   = 2
    unhealthy_threshold = 2
    timeout             = 3
    target              = "HTTP:8000/"
    interval            = 30
  }

  cross_zone_load_balancing   = true
  idle_timeout                = var.timeout
  connection_draining         = true
  connection_draining_timeout = var.timeout

  tags = {
    Name = "venkat-foobar-terraform-elb"
  }
}
variables.tf
variable "usernumber" {
  type = number
}

variable "elb_name" {
  type = string
}

variable "az" {
  type = list
}

variable "timeout" {
  type = number
}
terraform.tfvars
elb_name="myelb"
timeout="400"
az=["ap-south-1a","ap-south-1b","ap-south-1c"]

ap-south-1a (aps1-az1)
ap-south-1b (aps1-az3)
ap-south-1c (aps1-az2)



resource "aws_instance" "database" {
  ami           = "ami-04893cdb768d0f9ee"
  instance_type = "t2.micro"

  tags = {
    Name = "HelloVenkat"
    Env = "Dev"
  }
}



====================


terraform {
  required_providers {
    aws = {
      source = "hashicorp/aws"
      version = "4.8.0"
    }
  }
}

provider "aws" {
  # Configuration options
  region = "ap-south-1"
}



----


resource "aws_instance" "database" {
  ami           = "ami-04893cdb768d0f9ee"
  instance_type = "t2.micro"

  tags = {
    Name = "HelloVenkat"
    Env = "Dev"
  }
}

resource "aws_s3_bucket" "venkat_bucket" {
  bucket = "venkat-bucketaprsg442022"

  tags = {
    Name        = "Venkat bucket"
    Environment = "Dev"
  }
}

output "public-ip-ec" {
    description = " ec2 instanse test purpose"
    value = aws_instance.database.public_ip
}

output "bucket_id" {
    description = " ec2s3 bucket instanse test purpose"
    value = aws_s3_bucket.venkat_bucket.id
}

resource "aws_vpc" "Venkat_main" {
  cidr_block = "10.0.0.0/16"
  tags = {
    Name = "Venkat_main_vpc"
    Env = "Dev"
  }
}

resource "aws_subnet" "Venkat_private" {
    cidr_block = "10.0.1.0/24"
    vpc_id = aws_vpc.Venkat_main.id
  tags = {
    Name = "Venkat_private_subnet"
    Env = "Dev-private"
  }
}

resource "aws_subnet" "Venkat_public" {
    cidr_block = "10.0.2.0/24"
    vpc_id = aws_vpc.Venkat_main.id
  tags = {
    Name = "Venkat_public_subnet"
    Env = "Dev-public"
  }
}

output "vpc_id" {
    value = aws_vpc.Venkat_main.id
}

output "private_subnet_id" {
    value = aws_subnet.Venkat_private.id
}

output "public_subnet_id" {
    value = aws_subnet.Venkat_public.id
}

resource "aws_instance" "Venkat_Web" {
  ami           = "ami-04893cdb768d0f9ee"
  instance_type = "t2.micro"
  subnet_id = aws_subnet.Venkat_public.id
  tags = {
    Name = "HelloVPCVenkat"
    Env = var.tag_env
  }
}


variable "tag_env" {
  type = string
  default = "testenv"
}


----------


resource "aws_subnet" "Venkat_foreach" {
    cidr_block = each.value[0]
    vpc_id = aws_vpc.Venkat_main.id
    availability_zone = each.value[1]
    for_each = {
        firstlab_subnet = [ "10.0.3.0/24", "ap-south-1a"]
        secondlab_subnet = [ "10.0.4.0/24", "ap-south-1b"]
        thirdlab_subnet = [ "10.0.5.0/24", "ap-south-1c"]
    }
  tags = {
    Name = each.key
    Env = "Dev-foreach"
  }
}


vpc-0b71c70d33355bd05


================================



# VPC Basic Details
  name = "venkat-tf-vpc"
  cidr = "172.0.0.0/16"   
  azs                 = ["us-east-2a", "us-east-2b"]
  private_subnets     = ["172.0.1.0/24", "172.0.2.0/24"]
  public_subnets      = ["172.0.101.0/24", "172.0.102.0/24"]

  # Database Subnets
  create_database_subnet_group = true
  create_database_subnet_route_table= true
  database_subnets    = ["172.0.151.0/24", "172.0.152.0/24"]

  #create_database_nat_gateway_route = true
  #create_database_internet_gateway_route = true

  # NAT Gateways - Outbound Communication
  enable_nat_gateway = true
  single_nat_gateway = true

  # VPC DNS Parameters
  enable_dns_hostnames = true
  enable_dns_support = true

  public_subnet_tags = {
    Type = "venkat-tf-public-subnets"
  }

  private_subnet_tags = {
    Type = "venkat-tf-private-subnets"
  }

  database_subnet_tags = {
    Type = "venkat-tf-database-subnets"
  }

  tags = {
    Owner = "venkat-tf-vpc"
    Environment = "dev-tf"
  }

  vpc_tags = {
    Name = "venkat-tf-vpc-dev"
  }
}


=============

module "ec2" {
    source = "C:/Users/Administrator/Terraform-Lab/aws5"
}


============

venkatterraformapr2022 ----> bucket name in useast-2

  backend "s3" {
    bucket = "venkatterraformapr2022"
    region = "us-east-2"
    key = "backend-venkat/terraform.tfstate"
  }
}